---
all:
  hosts:
    k8s-node1:
      ansible_host: 10.0.0.151
    k8s-node2:
      ansible_host: 10.0.0.152
    k8s-node3:
      ansible_host: 10.0.0.153
  children:
    k3s_master:
      hosts:
        # At most one master:
    k3s_worker:
      hosts:
        # At least one worker unless there is no master:
    k8s_master:
      hosts:
        # At most one master:
        k8s-node1: {}
    k8s_worker:
      hosts:
        k8s-node1: {}
        k8s-node2: {}
        k8s-node3: {}
        # At least one worker unless there is no master:
    raspberry_pi:
      hosts:
        k8s-node1: {}
        k8s-node2: {}
        k8s-node3: {}
    raspbian:
      hosts:
        k8s-node1: {}
        k8s-node2: {}
        k8s-node3: {}
      vars:
        ansible_ssh_user: pi
        boot_directory: /boot
    ubuntu:
      hosts:
      vars:
        ansible_ssh_user: ubuntu
        boot_directory: /boot/firmware
  vars:
    ansible_python_interpreter: /usr/bin/python3
    #containerd_version: 1.2.13-2
    # Do you want to delete local data in k3s, k8s and Docker upon teardown?
    #delete_local_data: no
    #docker_apt_key_id: 8D81803C0EBFCD88
    #docker_apt_key_url: "https://download.docker.com/linux/{{ ansible_lsb.id.lower() }}/gpg"
    #docker_apt_repository: "deb https://download.docker.com/linux/{{ ansible_lsb.id.lower() }} {{ ansible_lsb.codename.lower() }} stable"
    # Make sure to match the `no_proxy` pattern or otherwise expect Docker images to be proxied twice:
    #docker_registry_mirror_url: https://my-docker-registry-mirror.local/
    #docker_version: "5:19.03.11~3-0~{{ ansible_lsb.id.lower() }}-{{ ansible_lsb.codename.lower() }}" # (https://docs.docker.com/install/linux/docker-ce/ubuntu/)
    #k3s_version: v1.17.7+k3s1 # (https://github.com/rancher/k3s/releases)
    k8s_version: 1.19.4-00 # (https://github.com/kubernetes/kubernetes/releases)
    kubernetes_cni_version: 0.8.7-00 # (https://github.com/containernetworking/plugins/releases)
    #locale: C.UTF-8
    # Make sure to match all nodes and the `docker_registry_mirror_url`:
    no_proxy: 10.0.0.0/8,127.0.0.0/8,192.168.0.0/16,*.local,localhost
    # Make sure to use an IP address, not a hostname, or otherwise expect the Kubernetes setup to fail:
    proxy_url: None
    #timezone: UTC
